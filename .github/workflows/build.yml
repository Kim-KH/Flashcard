name: Build
on: [push, pull_request] 

jobs:
  build-android:
    name: Build for Android
    runs-on: ubuntu-latest
    timeout-minutes: 45  # 여기에 timeout-minutes를 추가합니다
      
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
      
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libstdc++6 zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev libsqlite3-dev libbz2-dev openjdk-11-jdk

    - name: Set Gradle permissions
      run: |
        chmod +x /home/runner/work/Flashcard/Flashcard/.buildozer/android/platform/build-arm64-v8a/dists/flashcardapp/gradlew

    - name: Install Buildozer and dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install --upgrade pip
        pip install Cython==0.29.33
        pip install buildozer==1.5.0
        pip install kivy[audio]==2.2.1
        pip install kivymd==1.1.1
        pip install pyjnius==1.6.1
        pip install pillow==9.5.0
        pip install requests==2.31.0
        pip install gtts==2.3.2
        pip install virtualenv==20.24.5
        pip install -r requirements.txt
        pip install buildozer Cython==0.29.33
        pip install kivy_garden
        
    - name: Set up Python-for-Android
      run: |
        git clone https://github.com/kivy/python-for-android.git
        cd python-for-android
        python setup.py install

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        cmdline-tools-version: '9477386'  # 최신 버전 사용
        
    - name: Install Android SDK platform tools
      run: |
        yes | sdkmanager --licenses
        sdkmanager "platform-tools" "platforms;android-30" "build-tools;30.0.3"
      env:
        JAVA_HOME: ${{ env.JAVA_HOME_11_X64 }}

    - name: Install Android NDK
      run: |
        wget https://dl.google.com/android/repository/android-ndk-r25b-linux.zip
        unzip -q android-ndk-r25b-linux.zip -d $ANDROID_HOME
        echo "ANDROID_NDK_HOME=$ANDROID_HOME/android-ndk-r25b" >> $GITHUB_ENV

    - name: Update buildozer.spec
      run: |
        sed -i 's/^android.ndk =.*/android.ndk = 25b/' buildozer.spec
        sed -i 's/^android.ndk_path =.*/android.ndk_path = $ANDROID_NDK_HOME/' buildozer.spec

    - name: Cache Buildozer global directory
      uses: actions/cache@v3
      with:
        path: ~/.buildozer
        key: ${{ runner.os }}-buildozer-${{ hashFiles('buildozer.spec') }}

    - name: Cache Buildozer dependencies
      uses: actions/cache@v2
      with:
        path: ~/.buildozer
        key: ${{ runner.os }}-buildozer-${{ hashFiles('buildozer.spec') }}
        restore-keys: |
          ${{ runner.os }}-buildozer-
        
    - name: Build with Buildozer
      run: |
        sudo mkdir -p /home/runner/.buildozer
        sudo chown -R $USER:$USER /home/runner/.buildozer
        export PATH=$PATH:~/.local/bin
        buildozer android clean
        buildozer android debug
      env:
        BUILDOZER_WARN_ON_ROOT: 0
        # JAVA_HOME: ${{ env.JAVA_HOME_11_X64 }}
        ANDROID_HOME: /usr/local/lib/android/sdk
        ANDROID_NDK_HOME: ${{ env.ANDROID_NDK_HOME }}
        P4A_HOME: /home/runner/work/Flashcard/Flashcard/python-for-android   
        JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64
     
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: package
        path: bin/*.apk
